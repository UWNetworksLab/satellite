'use strict';

/**
 * take a return-separated list of IPs (servers.txt), and turn it into
 * a return-separated list of ASNs, showing the ASNs where there were at least
 * _n_ IPs in that ASN. Uses a ip->asn lookup.json file (as generated by
 * makemap.js) for the lookup.
 */

var fs = require('fs');
var es = require('event-stream');
var chalk = require('chalk');
var ip_utils = require('../util/ip_utils');
var asnmap = require('./asn_lookup');

if (!process.argv[3]) {
  console.error(chalk.red('Usage: servers_to_asns.js <ips.txt> <lookup.json> <threshold> > asns.txt'));
  process.exit(1);
}

var inFile = process.argv[2];
var lookTable = asnmap.getMapSync(process.argv[3]);
var threshold = Number(process.argv[4]);

var lines = fs.readFileSync(inFile).toString().split('\n');
var asns = {};

lines.forEach(function(line) {
  var asn = lookTable.lookup(line);
  if (!asns[asn]) {asns[asn] = 0;}
  asns[asn] += 1;
});

var goodASNs = Object.keys(asns).filter(function(asn) {
  return asns[asn] > threshold;
});

goodASNs.forEach(function(asn) {
  console.log(asn);
});
